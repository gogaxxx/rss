#!/usr/bin/perl
#
# remove old items from index file leaving actual files intact
#

use strict;
use warnings;

use Agg::Config;

use constant MINUTE => 60;
use constant HOUR => 60*MINUTE;
use constant DAY => 60*60*24;
use constant WEEK => 7*DAY;
use constant MONTH => 30*DAY; # not a real month
use constant YEAR  => 365*DAY; # not a real year either

my %mul = (
    S => 1,
    s => 1,
    M => MINUTE,
    h => HOUR,
    H => HOUR,
    d => DAY,
    w => WEEK,
    m => MONTH,
    y => YEAR,
);

# MAIN #+++1 
MAIN: {
    my $id = $ARGV[0] || die("Specify id");

    my $cfg = Agg::Config->get_config_by_id($id);

    my $master = $cfg->{master};
    my $new_master = $master.'.new';
    my $master_timeout = parse($cfg->{'master-timeout'});

    open(MASTER, '<'.$master) || die("Can't open $master: $!");
    open(NEWMASTER, '>'.$new_master) 
        || die("Can't open $new_master: $!");

    my $now = time();
    my @keep = ();
    while (my $line = <MASTER>) {
        chomp $line;
        my @parts = split(/\s+/o, $line);

        my $time = $parts[0];
        if ($now - $time <= $master_timeout) {
            print NEWMASTER join(' ', @parts), "\n";
        }
    }
    close NEWMASTER;
    close MASTER;

    rename($new_master, $master) 
        || die("Can't rename $new_master to $master: $!");
}

# parse #+++1
sub parse {
    my $str = shift;

    $str =~ s/\s+//go;
    my @parts = split(/([^\d]+)/o, $str);
    my $num = 0;

    my $i=0;
    my $cur_num;
    while ($i < @parts) {
        if ($parts[$i] =~ /\d+/o) {
            $cur_num = $parts[$i];
        }
        elsif (exists $mul{$parts[$i]} && defined $cur_num) {
            $cur_num *= $mul{$parts[$i]};
            $num+=$cur_num;
            $cur_num=0;
        }
        else {
            die("Bad time format");
        }
        $i++;
    }
    $num += $cur_num;

    return $num;
}
