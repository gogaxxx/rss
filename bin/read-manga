#!/usr/bin/perl

use strict;
use Agg::Config;
use Agg::Download;
use File::Copy;
use HTML::Parser;

my $id = $ARGV[0]; # for example "Berserk"
my $cfg = Agg::Config->get_config_by_id($id);

my $chapter = $ARGV[1] || die("Specify chapter");
my $page = $ARGV[2] // die("Specify page");

my $tpurl   = $cfg->{tpurl};
my $pattern = $cfg->{pattern};
my $tfile   = $cfg->{filename};
my $imgdir  = $cfg->{imgdir};
my $tviewer = $cfg->{viewer};
my $start   = $cfg->{start};

my $regexp = qr{$pattern};

my $downloader = Agg::Download->new($cfg);
my $parser = HTML::Parser->new(
	start_h => [ \&tag_start, 'self,tagname,attr']);
$parser->{regexp} = $regexp;

while(1) {
	my $page_url = sprintf($tpurl, $start+$chapter, $page, $chapter);

	#my $content = $downloader->fetch_recent($page_url);
	print "Loading page...";
	my $content = $downloader->fetch_cached($page_url);
	print "success\n";

	$parser->{res} = '';
	$parser->parse($content);
	my $img_url = $parser->{res};
	print ("Loading image: ", $img_url, "...");
	$downloader->cache($img_url);
	print ("success\n");

	my $filename = $tfile;
	my $fchapter = sprintf('%.4d', $chapter);
	my $fpage    = sprintf('%.5d', $page);
	$filename =~ s/\%chapter\b/$fchapter/g;
	$filename =~ s/\%page\b/$fpage/g;
	#print "filename=$filename\n";
	
	my $res_name = $imgdir.'/'.$filename;
	#print "res_name=$res_name\n";
	#print "downloader->full_path=".$downloader->full_path;
	copy($downloader->full_path, $res_name);
	my $viewer = $tviewer;
	# TODO: сделать как в Agg::Download
	$viewer =~ s/\%file\b/$res_name/g;
	system($viewer);

	print "next page: ", $page+1, "\n";
	print q{Enter to continue, b to go back, q to quit> };
	my $rc = <STDIN>;
	chomp $rc;
	if ($rc eq 'q') {
		exit;
	}
	elsif ($rc eq 'b') {
		$page --;
	}
	else {
		$page ++;
	}
}

# tag_start #+++1
sub tag_start {
	my ($self, $tagname, $attr) = @_;

	my $regexp = $self->{regexp};
	if (lc($tagname) eq 'img') {
		if ($attr->{src} =~ /$regexp/) {
			$self->{res} = $attr->{src};
			$self->eof;
		}
	}
}
