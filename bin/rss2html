#!/usr/bin/perl
#
#
#

use strict;
use warnings;

use Agg::Config;
use Agg::Item;
use Agg::Transform;
use Getopt::Std;
use POSIX qw(strftime);

MAIN: {
	my %opts;

#pods#+++
=head2 OPTIONS

=over

=item -a

Load ALL items in master index (by default load only new items)

=back

=cut
#---

	getopts('a', \%opts);
	my $feed_id = $ARGV[0] || die("Specify feed id");

	my $cfg = Agg::Config->get_config_by_id($feed_id);

	# грузим master
	my $index = 
		$opts{'a'}
			? $cfg->{'master'}
			: $cfg->{'news'};
	my @master = ();
	open(INDEX, '<'.$index) 
		|| die("Can't open ".$index.": $!");
	while (my $line = <INDEX>) {
		chomp $line;

		# XXX возможно добавить фильтрацию по времени, например

		push @master,
			[ split(/\s+/o, $line, 3) ];
	}
	close INDEX;

	my $outfile = $cfg->{'readdir'}.'/'.$cfg->{'name'}.'.html';
	unlink($outfile);

	if (@master) {
		# сортируем по времени
		@master = sort { $a->[0] <=> $b->[0] } @master;

		my $itemizer = Agg::Item->new($cfg);
		my $transform = Agg::Transform->new($cfg);

		open(OUT, '>'.$outfile) || die("Can't open $outfile: $!");
		
		my $enc = $cfg->{'encoding'};
		for my $i (@master) {
			my $item = $itemizer->load_item($i->[1]);
			$transform->transform_item($item);

			print OUT Encode::encode($enc, '<h1>'.$item->{subject}.'<br></h1>');
			print OUT 
				'<span class=date>['
				. strftime($cfg->{'date-format'}, localtime($item->{'time'}))
				. ']</span><br>';
			print OUT Encode::encode($enc, '<div class=body>'.$item->{body}.'</div>');
			print OUT "<hr>\n";
		}
		close OUT;
	}
}
