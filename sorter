#!/usr/bin/perl

use strict;
use lib '.';
use cfg;

use File::Copy;

my @to_process = (
	{ 'input'      => $cfg::items_dir.'/order',
	'output_tmp'   => $cfg::out_dir.'/lenta%d.html',
	'output_start' => $cfg::out_dir.'/lenta.html'},
	{ 'input'      => $cfg::items_dir.'/new',
	'output_tmp'   => $cfg::out_dir.'/new%d.html',
	'output_start' => $cfg::out_dir.'/new.html' },
);

for my $p (@to_process) {
	open (ORDER, '<'.$p->{'input'});
	my @order = ();
	while (my $line1 = <ORDER>) {

		chomp $line1;
		my @fields = split(/\s+/o, $line1);

		push @order, [ @fields ];
	}
	close(ORDER);

	@order = sort { $a->[0] <=> $b->[0] } @order;

	my $part = 0;
	my $item = 0;
	my @piece_of_lenta = ();

	for my $f (@order) {
	#    print (":", $f->[1], " - ", $part, "\n");
		open(FILE, '<'.$cfg::items_dir.'/'.$f->[1]);
		my $chunk = join('', <FILE>);
		close FILE;
		unshift @piece_of_lenta, $chunk;
		$item ++;

		if ($item >= $cfg::maxitems) {
			$part ++;
            open(OUTPUT, '>'.sprintf($p->{'output_tmp'}, $part));
			print OUTPUT @piece_of_lenta;
			print OUTPUT prev_part($p, $part), 
                         '&nbsp;&nbsp;',
                         next_part($p, $part);
			close OUTPUT;

			$item=0;
			@piece_of_lenta = ();
		}
	}
	if ($item > 0) {
        $part ++;
        open(OUTPUT, '>'.sprintf($p->{'output_tmp'}, $part));
		print OUTPUT @piece_of_lenta;
		print OUTPUT prev_part($p, $part);
        close OUTPUT;
	}

	copy(sprintf($p->{'output_tmp'}, $part), $p->{'output_start'});
}

sub prev_part {
	my $p = shift;
	my $part = shift;

	$part > 1 
		? q{<a href="}.sprintf($p->{'output_tmp'}, $part-1).q{">&lt;&lt;Prev</a>}
		: '';
}

sub next_part {
	my $p = shift;
	my $part = shift;
	 q{<a href="}.sprintf($p->{'output_tmp'}, $part+1).q{">Next&gt;&gt;</a>}
}
